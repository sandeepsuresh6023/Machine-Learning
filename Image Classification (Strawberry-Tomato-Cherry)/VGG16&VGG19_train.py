# -*- coding: utf-8 -*-
"""program.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZqJZChKgHIZrOqz-fmRp7iOHl6QaIQFH
"""


import numpy as np
import keras
from keras import backend as K
from keras.models import Sequential
from keras.layers import Activation
from keras.layers.core import Dense, Flatten
from keras.optimizers import Adam
from keras.metrics import categorical_crossentropy
from keras.preprocessing.image import ImageDataGenerator
from keras.layers.normalization import BatchNormalization
from keras.layers.convolutional import *
import itertools

SEED = 309
np.random.seed(SEED)
random.seed(SEED)
tf.set_random_seed(SEED)

train_path='/content/drive/My Drive/data/Train_data/'
valid_path='/content/drive/My Drive/data/Valid_data/'

train_batches=ImageDataGenerator().flow_from_directory(train_path, target_size=(224,224), classes=['cherry','strawberry','tomato'], batch_size=100)
valid_batches=ImageDataGenerator().flow_from_directory(valid_path, target_size=(224,224), classes=['cherry','strawberry','tomato'], batch_size=100)

pretrained_model=keras.applications.vgg16.VGG16()
#pretrained_model=keras.applications.vgg19.VGG19()

model=Sequential()
for layer in pretrained_model.layers[:-1]:
  model.add(layer)

for layer in model.layers:
  layer.trainable=False

model.add(Dense(3, activation='softmax'))

model.compile(Adam(lr=0.0001), loss='categorical_crossentropy', metrics=['accuracy'])

model.fit_generator(train_batches, steps_per_epoch=42, validation_data=valid_batches, validation_steps=3, epochs=50, verbose=2)

model.save('/content/drive/My Drive/data/vgg19_model_50.h5')

